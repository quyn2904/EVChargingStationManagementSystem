// <auto-generated />
using System;
using EVChargingStationManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EVChargingStationManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingConnectorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("Standard")
                        .HasColumnType("int")
                        .HasColumnName("standard");

                    b.HasKey("Id")
                        .HasName("pk_charging_connector_types");

                    b.ToTable("charging_connector_types");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7fb07369-1c30-4af5-b631-ef4e7f071705"),
                            IsDeleted = false,
                            Name = "Type 1 (SAE J1772)",
                            Standard = 0
                        },
                        new
                        {
                            Id = new Guid("769deda0-e45b-4532-ac2a-0f3253e84e88"),
                            IsDeleted = false,
                            Name = "Type 2 (Mennekes)",
                            Standard = 0
                        },
                        new
                        {
                            Id = new Guid("78f1e5f9-82f0-4466-b844-c26cb024433c"),
                            IsDeleted = false,
                            Name = "GB/T AC",
                            Standard = 0
                        },
                        new
                        {
                            Id = new Guid("12f8c15e-b19b-4272-b240-19ac766e6bea"),
                            IsDeleted = false,
                            Name = "GB/T DC",
                            Standard = 1
                        },
                        new
                        {
                            Id = new Guid("e0b122a1-022f-4988-b089-e59636b61a31"),
                            IsDeleted = false,
                            Name = "CHAdeMO",
                            Standard = 1
                        },
                        new
                        {
                            Id = new Guid("9f0249ad-a5d4-48d8-8718-624a361ddb5f"),
                            IsDeleted = false,
                            Name = "CCS1",
                            Standard = 1
                        },
                        new
                        {
                            Id = new Guid("44110d58-4e2c-4c53-965a-1e45e7953304"),
                            IsDeleted = false,
                            Name = "CCS2",
                            Standard = 1
                        });
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ChargingConnectorTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("charging_connector_type_id");

                    b.Property<Guid>("ChargingStationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("charging_station_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int")
                        .HasColumnName("port_number");

                    b.Property<int>("PowerOutput")
                        .HasColumnType("int")
                        .HasColumnName("power_output");

                    b.Property<int>("PricingRate")
                        .HasColumnType("int")
                        .HasColumnName("pricing_rate");

                    b.Property<string>("PricingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pricing_type");

                    b.HasKey("Id")
                        .HasName("pk_charging_points");

                    b.HasIndex("ChargingConnectorTypeId")
                        .HasDatabaseName("ix_charging_points_charging_connector_type_id");

                    b.HasIndex("ChargingStationId")
                        .HasDatabaseName("ix_charging_points_charging_station_id");

                    b.ToTable("charging_points");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("ChargingCost")
                        .HasColumnType("int")
                        .HasColumnName("charging_cost");

                    b.Property<Guid>("ChargingPointId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("charging_point_id");

                    b.Property<DateTime>("EndingTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("ending_timestamp");

                    b.Property<int>("EnergyConsumed")
                        .HasColumnType("int")
                        .HasColumnName("energy_consumed");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("StartingTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("starting_timestamp");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("vehicle_id");

                    b.HasKey("Id")
                        .HasName("pk_charging_sessions");

                    b.HasIndex("ChargingPointId")
                        .HasDatabaseName("ix_charging_sessions_charging_point_id");

                    b.HasIndex("VehicleId")
                        .HasDatabaseName("ix_charging_sessions_vehicle_id");

                    b.ToTable("charging_sessions");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("latitude");

                    b.Property<string>("Longtitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("longtitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_charging_stations");

                    b.ToTable("charging_stations");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int")
                        .HasColumnName("battery_capacity");

                    b.Property<int>("BatteryPercentage")
                        .HasColumnType("int")
                        .HasColumnName("battery_percentage");

                    b.Property<Guid>("ChargingConnectorTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("charging_connector_type_id");

                    b.Property<int>("ChargingRate")
                        .HasColumnType("int")
                        .HasColumnName("charging_rate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("LastChargedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_charged_at");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("license_plate");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<Guid>("VehicleManufacturerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("vehicle_manufacturer_id");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("vehicle_type_id");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int")
                        .HasColumnName("year_of_manufacture");

                    b.HasKey("Id")
                        .HasName("pk_vehicles");

                    b.HasIndex("ChargingConnectorTypeId")
                        .HasDatabaseName("ix_vehicles_charging_connector_type_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_vehicles_user_id");

                    b.HasIndex("VehicleManufacturerId")
                        .HasDatabaseName("ix_vehicles_vehicle_manufacturer_id");

                    b.HasIndex("VehicleTypeId")
                        .HasDatabaseName("ix_vehicles_vehicle_type_id");

                    b.ToTable("vehicles");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.VehicleManufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_vehicle_manufacturers");

                    b.ToTable("vehicle_manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("131372a7-6dd7-454a-9a62-ce7ce60ecb01"),
                            IsDeleted = false,
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = new Guid("79d6cfdc-2054-4d4c-a2c5-b09747c42cf3"),
                            IsDeleted = false,
                            Name = "BYD"
                        },
                        new
                        {
                            Id = new Guid("8002aad2-b699-4279-a325-50a8d5e4ba4b"),
                            IsDeleted = false,
                            Name = "VinFast"
                        },
                        new
                        {
                            Id = new Guid("d3463c43-7537-473f-8907-e6b322f395df"),
                            IsDeleted = false,
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = new Guid("77f872cc-fea2-4b70-a468-ee400ad762b6"),
                            IsDeleted = false,
                            Name = "Kia"
                        });
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_vehicle_types");

                    b.ToTable("vehicle_types");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cfa2088-7d48-4507-b2c3-20008ff16c0f"),
                            IsDeleted = false,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = new Guid("7a43952a-8cac-4007-a29b-241258e75fdb"),
                            IsDeleted = false,
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = new Guid("5e23fc0f-6c10-4ed9-9d7a-027a8482deec"),
                            IsDeleted = false,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = new Guid("76a6deb3-9bed-4aac-8c7f-4d8b601ed92c"),
                            IsDeleted = false,
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = new Guid("87953815-d78b-450e-a822-1b5e06f6c63e"),
                            IsDeleted = false,
                            Name = "Crossover"
                        });
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingPoint", b =>
                {
                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.ChargingConnectorType", "ChargingConnectorType")
                        .WithMany()
                        .HasForeignKey("ChargingConnectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_charging_points_charging_connector_types_charging_connector_type_id");

                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.ChargingStation", "ChargingStation")
                        .WithMany("ChargingPoints")
                        .HasForeignKey("ChargingStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_charging_points_charging_stations_charging_station_id");

                    b.Navigation("ChargingConnectorType");

                    b.Navigation("ChargingStation");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingSession", b =>
                {
                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.ChargingPoint", "ChargingPoint")
                        .WithMany("ChargingSessions")
                        .HasForeignKey("ChargingPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_charging_sessions_charging_points_charging_point_id");

                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("ChargingSessions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_charging_sessions_vehicles_vehicle_id");

                    b.Navigation("ChargingPoint");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.ChargingConnectorType", "ChargingConnectorType")
                        .WithMany()
                        .HasForeignKey("ChargingConnectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicles_charging_connector_types_charging_connector_type_id");

                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicles_users_user_id");

                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.VehicleManufacturer", "VehicleManufacturer")
                        .WithMany()
                        .HasForeignKey("VehicleManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicles_vehicle_manufacturers_vehicle_manufacturer_id");

                    b.HasOne("EVChargingStationManagementSystem.Domain.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicles_vehicle_types_vehicle_type_id");

                    b.Navigation("ChargingConnectorType");

                    b.Navigation("User");

                    b.Navigation("VehicleManufacturer");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingPoint", b =>
                {
                    b.Navigation("ChargingSessions");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.ChargingStation", b =>
                {
                    b.Navigation("ChargingPoints");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.User", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("EVChargingStationManagementSystem.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("ChargingSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
